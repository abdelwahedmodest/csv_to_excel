name: Test and Deploy

# Déclencher ce workflow sur chaque push et pull request vers la branche main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 12 * * 1' # Exécute chaque lundi à midi

jobs:
  # Job pour tester le projet
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11]
    
    steps:
      # Actions Git pour récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Configurer Python
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      # Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Exécuter les tests
      - name: Run tests
        run: |
          pytest

  # Job pour déployer le projet si les tests sont réussis
  deploy:
    runs-on: ubuntu-latest
    needs: test # Ce job ne s'exécutera que si le job "test" réussit
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Déploiement (exemple AWS S3)
      - name: Deploy to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./public s3://your-bucket-name --delete

      # Notification de succès
      - name: Notify success
        if: success()
        run: echo "Deployment successful!"

      # Notification d'échec
      - name: Notify failure
        if: failure()
        run: echo "Deployment failed!"
